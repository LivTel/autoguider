#!/bin/csh
# $Header: /home/cjm/cvs/autoguider/scripts/autoguider_make_dark,v 1.6 2013-12-09 10:16:45 cjm Exp $
set gaiadisp = 0
set exposure_length = "1000"
set exposure_count = "3"
set output_filename = ""
if ( $#argv > 0 ) then
    set next_arg = ""
    foreach arg ( $argv )
	if( "$arg" == "-gaiadisp" ) then
		set gaiadisp = 1
	else if( "$arg" == "-exposure_length" ) then
		set next_arg = "exposure_length"
	else if( "$arg" == "-exposure_count" ) then
		set next_arg = "exposure_count"
	else if( "$arg" == "-help" ) then
		echo "autoguider_make_dark [-exposure_length <ms>][-exposure_count <n>] -output <FITS filename>"
		exit 1
	else if( "$arg" == "-output" ) then
		set next_arg = "output_filename"
	else
		if( "${next_arg}" == "exposure_length" ) then
		    set exposure_length = "${arg}"
		    set next_arg = ""
		else if( "${next_arg}" == "exposure_count" ) then
		    set exposure_count = "${arg}"
		    set next_arg = ""
		else if( "${next_arg}" == "output_filename" ) then
		    set output_filename = "${arg}"
		    set next_arg = ""
		else
		    echo "Unknown argument: $arg"
		    exit 1
		endif
        endif
    end
endif
if( "${output_filename}" == "" ) then
    echo "No output filename specified."
    exit 1
endif
set output_leaf = `echo "${output_filename}" | sed "s/\(.*\).fits/\1/"`
if ( -r /home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command ) then
    alias send_command "/home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command"
else if ( -r /icc/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command ) then
    alias send_command "/icc/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command"
else
    echo "Could not find send_command."
    exit 2
endif
if ( -r /home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command ) then
    alias getfits_command "/home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command"
else if ( -r /icc/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command ) then
    alias getfits_command "/icc/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command"
else
    echo "Could not find test_getfits_command."
    exit 2
endif
if ( -r /home/dev/bin/ccd/misc/${HOSTTYPE}/fits_median ) then
    alias fits_median "/home/dev/bin/ccd/misc/${HOSTTYPE}/fits_median"
else if ( -r /icc/bin/ccd/misc/${HOSTTYPE}/fits_median ) then
    alias fits_median "/icc/bin/ccd/misc/${HOSTTYPE}/fits_median"
else
    echo "Could not find fits_median."
    exit 2
endif
set hostname = "acc"
set port = "6571"
#
# Turn off field reductions
#
echo "Turning off dark subtraction."
echo "Use: send_command -h ${hostname} -p ${port} -c 'field dark on' to restore."
set command_output = `send_command -h ${hostname} -p ${port} -c "field dark off"`
echo "field dark off returned : ${command_output}"
set retval = `echo "${command_output}" | /usr/bin/awk ' { print $1}'`
if( "${retval}" != "0" ) then
    echo "field dark off failed (${retval})."
    exit 1
endif
echo "Turning off flat fielding."
echo "Use: send_command -h ${hostname} -p ${port} -c 'field flat on' to restore."
set command_output = `send_command -h ${hostname} -p ${port} -c "field flat off"`
echo "field flat off returned : ${command_output}"
set retval = `echo "${command_output}" | /usr/bin/awk ' { print $1}'`
if( "${retval}" != "0" ) then
    echo "field flat off failed (${retval})."
    exit 1
endif
echo "Turning off object detection."
echo "Use: send_command -h ${hostname} -p ${port} -c 'field object on' to restore."
set command_output = `send_command -h ${hostname} -p ${port} -c "field object off"`
echo "field object off returned : ${command_output}"
set retval = `echo "${command_output}" | /usr/bin/awk ' { print $1}'`
if( "${retval}" != "0" ) then
    echo "field object off failed (${retval})."
    exit 1
endif
#
# Get dark frames
#
set file_number = 0
set done = 0
set median_command_arguments = "-o ${output_filename}"
while ( "${done}" == 0 )
	set filename = "${output_leaf}_${file_number}.fits"
	set expose_output = `send_command -h ${hostname} -p ${port} -c "expose ${exposure_length}"`
	echo "expose ${exposure_length} returned : ${expose_output}"
	set retval = `echo "${expose_output}" | /usr/bin/awk ' { print $1}'`
	if( "${retval}" != "0" ) then
		echo "expose ${exposure_length} failed (${retval})."
		exit 1
	endif
	# NB getfits_command overwrites any previously existing filename of this name.
	getfits_command -h ${hostname} -p ${port} -c "getfits field raw" -f ${filename}
	set retval = $status
	if( "${retval}" != "0" ) then
		echo "getfits_command getfits field raw (${retval})."
		exit 1
	endif
	@ file_number ++
	if( "${gaiadisp}" == "1" ) then
		gaiadisp ${filename}
	endif
	set median_command_arguments = " ${median_command_arguments} -i ${filename}"
	if( "${file_number}" == "${exposure_count}" ) then
	    set done = 1
	endif
end
#
# If the median/output file already exists, the fits_median call will fail.
# Detect existence of output filename and rename appropriately.
#
if ( -e "${output_filename}" ) then
    echo "${output_filename} already exists, trying to rename old file... "
    set date_string = `/bin/date +"%Y-%m-%dT%H:%M:%S"`
    set old_output_filename = "${output_filename}.old.${date_string}"
    echo "/bin/mv ${output_filename} ${old_output_filename}"
    /bin/mv ${output_filename} ${old_output_filename}
    set retval = $status
    if( "${retval}" != "0" ) then
	echo "/bin/mv ${output_filename} ${old_output_filename} failed (${retval})."
	exit 1
    endif
endif
echo "About to create median."
echo "fits_median ${median_command_arguments}"
fits_median ${median_command_arguments}
set retval = $status
if( "${retval}" != "0" ) then
    echo "fits_median failed (${retval})."
    exit 1
endif
echo "Dark median ${output_filename} created."
if( "${gaiadisp}" == "1" ) then
    gaiadisp ${output_filename}
endif
echo "Note, field dark subtraction is now turned off, use:send_command -h ${hostname} -p ${port} -c'field dark on' to restore."
echo "Note, field flat-fielding is now turned off, use:send_command -h ${hostname} -p ${port} -c'field flat on' to restore."
echo "Note, field object detection is now turned off, use:send_command -h ${hostname} -p ${port} -c'field object on' to restore."
