#!/bin/csh
# $Header: /home/cjm/cvs/autoguider/scripts/autoguider_make_deployment,v 1.22 2014-01-31 17:36:28 cjm Exp $
# Version: $Revision: 1.22 $
# By $Author: cjm $
# Make a deployment tar file.
# This contains:
# 	The Autoguider control system
#	Associated libraries and test programs
#	Startup scripts
#	Appropriate configuration
# Usage:
#	autoguider_make_deployment <machine>
if ( ${#argv} != 1 ) then
	echo "Please specify a deployment machine."
	echo "$0 <machine>"
	exit 1
endif
set machine_name = "$1"
if ( "${machine_name}" == "-help") then
	echo "$0 <machine>"
	exit 0
endif
set camera_name = "autoguider"
switch ( "${machine_name}" )
    case "autoguider1":
	set camera_library = "libautoguider_ccd_andor.so"
	breaksw
    case "autoguider2":
	set camera_library = "libautoguider_ccd_pco.so"
	breaksw
    case "iucaaag":
	set camera_library = "libautoguider_ccd_fli.so"
	breaksw
    default:
	echo "Unknown camera for machine ${machine_name}. Deployment creation failed."
	exit 1
endsw
# dev root directory
set dev_dir 		= "~dev"
# dev binary root directory
set dev_bin_dir 	= "${dev_dir}/bin"
# directory script was run in
set current_dir		= `pwd`
# temporary directory containing root of deployment tree (which becomes root of tar).
set deployment_dir 	= "/tmp/autoguider_deployment"
# temporary directory for deployment temporary files
set deployment_tmp_dir 	= "/tmp/autoguider_deployment/tmp"
# temporary directory containing root icc directory.
set deployment_icc_dir 	= "/tmp/autoguider_deployment/icc"
# temporary directory containing root bin directory.
set deployment_bin_dir 	= "/tmp/autoguider_deployment/icc/bin"
# directory location of tar
set deployment_tar_dir 	= "${dev_dir}/public_html/autoguider/deployment"
# name of tar file
set deployment_tar 	= "autoguider_deployment_${machine_name}.tar"
# name of install script
set install_script      = autoguider_tar_install
#
# Host specific configuration
#
if( "${HOSTTYPE}" == "sun4" ) then
    setenv GREP "/usr/xpg4/bin/grep"
    set bin_file_type = "ELF 32-bit MSB executable"
    set init_d_dir = "/etc/init.d"
else if ( "${HOSTTYPE}" == "i386-linux" ) then
    setenv GREP "/bin/grep"
    set bin_file_type = "ELF 32-bit LSB executable"
    set kernel_release = `uname -r`
    set init_d_dir = "/etc/rc.d/init.d"
else if ( "${HOSTTYPE}" == "x86_64-linux" ) then
    setenv GREP "/bin/grep"
    set bin_file_type = "ELF 64-bit LSB shared object"
    set kernel_release = `uname -r`
    set init_d_dir = "/etc/rc.d/init.d"
else
    echo "Illegal hosttype ${HOSTTYPE}."
    exit 1
endif
#
# Clear old deployment.
#
if (-d ${deployment_dir}) then
	echo "Deployment directory ${deployment_dir} already exists:clearing..."
	rm -rf ${deployment_dir}
endif
#
# Create directory structure
#
echo "Creating directory structure..."
set dir_count = 0
set dir_list = "${deployment_dir} ${deployment_dir}/${init_d_dir} ${deployment_icc_dir} ${deployment_bin_dir} ${deployment_dir}/icc/tmp ${deployment_dir}/icc/tmp/log_archive ${deployment_dir}/icc/log ${deployment_icc_dir}/config ${deployment_icc_dir}/dprt/dark ${deployment_icc_dir}/dprt/flat ${deployment_bin_dir}/scripts ${deployment_bin_dir}/autoguider/scripts ${deployment_bin_dir}/autoguider/c/${HOSTTYPE} ${deployment_bin_dir}/autoguider/commandserver/test/${HOSTTYPE} ${deployment_bin_dir}/autoguider/ngatcil/test/${HOSTTYPE} ${deployment_bin_dir}/autoguider/ccd/test/${HOSTTYPE} ${deployment_bin_dir}/ics_util/c/${HOSTTYPE} ${deployment_bin_dir}/iboot/${HOSTTYPE} ${deployment_bin_dir}/ccd/misc/${HOSTTYPE} ${deployment_bin_dir}/javalib ${deployment_bin_dir}/lib/${HOSTTYPE} ${deployment_bin_dir}/autoguider/test ${deployment_bin_dir}/libdprt/object/test/${HOSTTYPE} ${deployment_bin_dir}/log_udp/test/${HOSTTYPE} ${deployment_bin_dir}/autobooter/java ${deployment_bin_dir}/autoguider/java/gui"
switch ( "${machine_name}" )
    case "autoguider1":
	set dir_list = "${dir_list} ${deployment_bin_dir}/autoguider/ccd/andor/test/${HOSTTYPE} ${deployment_bin_dir}/andor/examples/console/cooling ${deployment_bin_dir}/andor/examples/console/image"
	breaksw
    case "autoguider2":
	set dir_list = "${dir_list} ${deployment_bin_dir}/autoguider/ccd/pco/test/${HOSTTYPE}"
	breaksw
    case "iucaaag":
	set dir_list = "${dir_list} ${deployment_bin_dir}/autoguider/ccd/fli/test/${HOSTTYPE}"
	breaksw
    default:
	echo "Unknown machine ${machine_name}. Deployment creation failed."
	exit 1
endsw
# ${deployment_bin_dir}/autoguider/andor/examples/common  
foreach dir ( ${dir_list} )
	mkdir -p ${dir}
	if ($status != 0) then
	   echo "Failed to make directory ${dir}"
	   exit 2
	endif
	@ dir_count ++
end
echo "${dir_count} directories created."
#
# kernel module
#
#if ( "${HOSTTYPE}" == "i386-linux" ) then
#    set dir = "${deployment_dir}/lib/modules/${kernel_release}/misc"
#    echo "Making kernel driver dir for ${kernel_release}."
#    mkdir -p ${deployment_dir}/lib/modules/${kernel_release}/misc
#    if ($status != 0) then
#       echo "Failed to make directory ${dir}"
#       exit 2
#    endif
#endif
#
# Copy jars
#
echo "Copying jars..."
set jar_list = "ngat_net.jar ngat_util.jar ngat_util_logging.jar ngat_autoguider.jar ngat_swing.jar ngat_sound.jar"
set jar_count = 0
foreach jar ( ${jar_list} )
	echo "jar : ${jar}"
# copy jar to deployment location
	cp ${dev_bin_dir}/javalib/${jar} ${deployment_bin_dir}/javalib
	set cp_status = $status
	if( ${cp_status} != 0 ) then
	    echo "Copy failed: ${dev_bin_dir}/javalib/${jar} to ${deployment_bin_dir}/javalib"
	    exit 3
	endif
# ident contents of jar
	cd ${deployment_dir}
	rm -rf ${deployment_tmp_dir}
	mkdir ${deployment_tmp_dir}
	cp ${dev_bin_dir}/javalib/${jar} ${deployment_tmp_dir}
	cd ${deployment_tmp_dir}
	jar xvf ${jar} > ${deployment_tmp_dir}/jar_output.txt
	find . -name '*.class' -print > ${deployment_tmp_dir}/class_list.txt
	foreach class ( `cat ${deployment_tmp_dir}/class_list.txt` )
		( ident ${class} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
		set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
		echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
	end
	if ( -r ${deployment_tmp_dir}/ident_list.txt) then
		cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_icc_dir}/ident_list.txt 
	endif
# keep track of number of jars processed
	@ jar_count ++
end
echo "${jar_count} jars copied."
#
# Java classes
#
echo "Copying Java class directories..."
set java_class_dir_list = "autobooter/java"
# grope/java/ngat/grope/ccd/test grope/test 
set java_class_dir_count = 0
set java_class_file_count = 0
foreach java_class_dir ( ${java_class_dir_list} )
	echo "Java class directory : ${java_class_dir}"
# copy java_class_dir to deployment location
	cp ${dev_bin_dir}/${java_class_dir}/*.class ${deployment_bin_dir}/${java_class_dir}
	set cp_status = $status
	if( ${cp_status} != 0 ) then
	    echo "Copy failed: ${dev_bin_dir}/${java_class_dir}/*.class to ${deployment_bin_dir}/${java_class_dir}"
	    exit 4
	endif
# ident each file in dir
	cd ${deployment_dir}
	rm -rf ${deployment_tmp_dir}
	mkdir ${deployment_tmp_dir}
	cd ${deployment_bin_dir}
	find ${java_class_dir} -name '*.class' -print > ${deployment_tmp_dir}/class_list.txt
	foreach class ( `cat ${deployment_tmp_dir}/class_list.txt` )
		( ident ${class} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
		set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
		echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
		@ java_class_file_count ++
	end
	if ( -r ${deployment_tmp_dir}/ident_list.txt) then
		cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_icc_dir}/ident_list.txt 
	endif
# keep track of number of java_class_dirs processed
	@ java_class_dir_count ++
end
echo "${java_class_dir_count} Java class directories copied with ${java_class_file_count} Java classes in them."
#
# C libraries
#
echo "Copying C libraries..."
set clib_list = "libcfitsio.so libdprt_object.so libdprt_libfits.so libccd_dprt.so liblt_filenames.so libngatastro.so libautoguider_commandserver.so libautoguider_ccd_general.so ${camera_library} libautoguider_ngatcil.so libestar_config.so liblog_udp.so"
set clib_count = 0
foreach clib ( ${clib_list} )
	echo "C Library : ${clib}"
# copy clib to deployment location
	if( -r ${dev_bin_dir}/lib/${HOSTTYPE}/${clib} ) then
	    cp ${dev_bin_dir}/lib/${HOSTTYPE}/${clib} ${deployment_bin_dir}/lib/${HOSTTYPE}/
	else if( -r ${dev_bin_dir}/estar/lib/${HOSTTYPE}/${clib} ) then
	    cp ${dev_bin_dir}/estar/lib/${HOSTTYPE}/${clib} ${deployment_bin_dir}/lib/${HOSTTYPE}/
	else
	    echo "Copy failed: Could not find ${clib} in ${dev_bin_dir}/lib/${HOSTTYPE} or ${dev_bin_dir}/estar/lib/."
	    exit 5
	endif

	set cp_status = $status
	if( ${cp_status} != 0 ) then
	    echo "Copy failed: ${dev_bin_dir}/lib/${HOSTTYPE}/${clib} to ${deployment_bin_dir}/lib/${HOSTTYPE}/"
	    exit 5
	endif
# ident contents of lib
	cd ${deployment_dir}
	rm -rf ${deployment_tmp_dir}
	mkdir ${deployment_tmp_dir}
	cd ${deployment_bin_dir}
	( ident lib/${HOSTTYPE}/${clib} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
	set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
	echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
	if ( -r ${deployment_tmp_dir}/ident_list.txt) then
		cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_icc_dir}/ident_list.txt 
	endif
# keep track of number of clibs processed
	@ clib_count ++
end
echo "${clib_count} C libraries copied."
#
# C programs
#
echo "Copying C program directories..."
set dir_list = "autoguider/c/${HOSTTYPE} autoguider/commandserver/test/${HOSTTYPE} autoguider/ngatcil/test/${HOSTTYPE} $autoguider/ccd/test/${HOSTTYPE} ics_util/c/${HOSTTYPE} iboot/${HOSTTYPE} ccd/misc/${HOSTTYPE} libdprt/object/test/${HOSTTYPE} log_udp/test/${HOSTTYPE}"
switch ( "${machine_name}" )
    case "autoguider1":
	set dir_list = "${dir_list} autoguider/ccd/andor/test/${HOSTTYPE} andor/examples/console/cooling andor/examples/console/image"
	breaksw
    case "autoguider2":
	set dir_list = "${dir_list} autoguider/ccd/pco/test/${HOSTTYPE}"
	breaksw
    case "iucaaag":
	set dir_list = "${dir_list} autoguider/ccd/fli/test/${HOSTTYPE}"
	breaksw
    default:
	echo "Unknown machine ${machine_name}. Deployment creation failed."
	exit 1
endsw
set dir_count = 0
set file_count = 0
# clean out deployment_tmp_dir
cd ${deployment_dir}
rm -rf ${deployment_tmp_dir}
mkdir ${deployment_tmp_dir}
cd ${deployment_bin_dir}
# go through directory list
foreach dir ( ${dir_list} )
	echo "C test program directory : ${dir}"
# get file list
	find ${dev_bin_dir}/${dir}/* > ${deployment_tmp_dir}/file_list.txt
	foreach file ( `cat ${deployment_tmp_dir}/file_list.txt` )
# check file is an executable
#		set file_type = `file -L ${file}`
#		echo "File ${file} is of type ${file_type}." 
		file -L ${file} | ${GREP} -q "${bin_file_type}"
		set grep_status = $status
		if ( ${grep_status} == 0 ) then
			echo "Deploying ${file}."
# copy file to deployment location
			cp ${file} ${deployment_bin_dir}/${dir}
			set cp_status = $status
			if( ${cp_status} != 0 ) then
			    echo "Copy failed: ${file} to ${deployment_bin_dir}/${dir}"
			    exit 6
			endif
# ident file and add to list
			( ident ${dir}/${file:t} > ${deployment_tmp_dir}/ident.txt ) >& ${deployment_tmp_dir}/ident_error.txt
			set ident_string = `cat ${deployment_tmp_dir}/ident.txt`
			echo "${ident_string}" >>! ${deployment_tmp_dir}/ident_list.txt
			@ file_count ++
		else
			echo "NOT Deploying ${file}."
		endif
	end
	rm -f ${deployment_tmp_dir}/file_list.txt
# keep track of number of dirs processed
	@ dir_count ++
end
if ( -r ${deployment_tmp_dir}/ident_list.txt) then
	cat ${deployment_tmp_dir}/ident_list.txt >>! ${deployment_icc_dir}/ident_list.txt 
endif
cd ${deployment_dir}
rm -rf ${deployment_tmp_dir}
echo "${dir_count} C test program directories copied, containg ${file_count} C test programs."
#
# Scripts
#
echo "Copying scripts..."
set file_list = "bin/scripts/configure_tai_data.csh bin/scripts/delete_log_files.csh bin/scripts/killhup.csh bin/scripts/fuser_check bin/autoguider/scripts/autoguider_field bin/autoguider/scripts/autoguider_get_exposure_lengths bin/autoguider/scripts/autoguider_get_guide_frames bin/autoguider/scripts/autoguider_get_guide_frames_cron bin/autoguider/scripts/autoguider_get_guide_packets bin/autoguider/scripts/autoguider_get_guide_packets_with_time bin/autoguider/scripts/autoguider_get_object_list bin/autoguider/scripts/autoguider_get_process_stats bin/autoguider/scripts/autoguider_guide bin/autoguider/scripts/autoguider_guide_packets_graph bin/autoguider/scripts/autoguider_guide_packets_to_csv bin/autoguider/scripts/autoguider_make_dark bin/autoguider/scripts/autoguider_make_dark_list bin/autoguider/scripts/autoguider_make_flat bin/autoguider/scripts/autoguider_object_list_graph bin/autoguider/scripts/autoguider_object_list_graph_column bin/autoguider/scripts/autoguider_object_list_graph_fwhm bin/autoguider/scripts/autoguider_object_list_to_csv bin/autoguider/scripts/autoguider_rm_guide_frames_cron bin/autoguider/scripts/autoguider_rm_field_frames_cron bin/autoguider/scripts/csv2gnuplot.sh bin/autoguider/scripts/print_line.awk bin/autoguider/java/gui/autoguider_runtime_system_evaluator bin/autoguider/scripts/autoguider_temperature_to_csv bin/autoguider/scripts/autoguider_log_get_temperature bin/autoguider/scripts/autoguider_engineering_mode "
#bin/scripts/autoguider_reboot bin/scripts/${HOSTTYPE}.random.awk bin/ccs_gui/java/icsgui bin/scripts/dprt_reduce_data
set file_count = 0
cd ${dev_dir}
foreach file ( ${file_list} )
    set new_file = `echo ${file} | sed "s#${machine_name}\.##" | sed "s#${HOSTTYPE}\.##"`
    cp ${dev_dir}/${file} ${deployment_icc_dir}/${new_file}
    set cp_status = $status
    if( ${cp_status} != 0 ) then
	echo "Copy failed: ${dev_dir}/${file} to ${deployment_icc_dir}/${new_file}"
	exit 4
    endif
    @ file_count ++
end
echo "${file_count} scripts copied."
#
# Configs
#
# in bin sub-directories
echo "Copying machine configuration files..."
set file_list = "autoguider/c/${HOSTTYPE}/${machine_name}.autoguider.properties autobooter/java/${machine_name}.autobooter.properties autoguider/java/gui/${machine_name}.ag_gui.properties"
switch ( "${machine_name}" )
    case "autoguider1":
	set file_list = "${file_list} autoguider/ccd/andor/test/${HOSTTYPE}/test_exposure.properties"
	breaksw
    case "autoguider2":
	set file_list = "${file_list}"
	breaksw
    case "iucaaag":
	set file_list = "${file_list}"
	breaksw
    default:
	echo "Unknown machine ${machine_name}. Deployment creation failed."
	exit 1
endsw
set file_count = 0
cd ${dev_dir}
foreach file ( ${file_list} )
    set new_file = `echo ${file} | sed "s#${machine_name}.livjm.ac.uk.##" | sed "s#${machine_name}.##"`
    cp ${dev_bin_dir}/${file} ${deployment_bin_dir}/${new_file}
    set cp_status = $status
    if( ${cp_status} != 0 ) then
	echo "Copy failed: ${dev_bin_dir}/${file} to ${deployment_bin_dir}/${new_file}"
	exit 5
    endif
    @ file_count ++
end
echo "${file_count} configuration files copied."
#echo "Copying camera configuration files..."
#set file_list = "autoguider/andor/examples/common/detector.ini autoguider/andor/examples/common/pcii29k_sldma.cof autoguider/andor/examples/common/pciifpga.rbf"
#set file_count = 0
#cd ${dev_dir}
#foreach file ( ${file_list} )
#    set new_file = ${file}
#    cp ${dev_bin_dir}/${file} ${deployment_bin_dir}/${new_file}
#    set cp_status = $status
#    if( ${cp_status} != 0 ) then
#	echo "Copy failed: ${dev_bin_dir}/${file} to ${deployment_bin_dir}/${new_file}"
#	exit 5
#    endif
#    @ file_count ++
#end
#echo "${file_count} camera configuration files copied."
#
# /etc init scripts
#
echo "Copying Autobooter initialisation script."
set from_file = "${dev_bin_dir}/autobooter/java/${machine_name}.autobooter"
set to_file = "${deployment_dir}/${init_d_dir}/autobooter"
cp  ${from_file} ${to_file}
set cp_status = $status
if( ${cp_status} != 0 ) then
    echo "Copy failed: ${from_file} to ${to_file}"
    exit 6
endif
#
# Kernel modules
#
# Maybe have per-machine local dir's of compiled astropci.o modules eventually
#if ( "${HOSTTYPE}" == "i386-linux" ) then
#    set src_dir = "${dev_bin_dir}/autoguider/andor/"
#    set dest_dir = "${deployment_dir}/lib/modules/${kernel_release}/misc"
#    cp ${src_dir}/andordrvlx.o ${dest_dir}
#    set cp_status = $status
#    if( ${cp_status} != 0 ) then
#	echo "Copy failed: ${src_dir}/andordrvlx.o to ${dest_dir}"
#	exit 3
#    endif
#endif
#
# serialized Java message classes : .obj
#
#echo "Copying serialized Java message files..."
#set dir = "autoguider/test"
#set file_count = 0
#cd ${dev_bin_dir}/${dir}
#foreach file ( *.obj )
#    cp ${dev_bin_dir}/${dir}/${file} ${deployment_bin_dir}/${dir}/${file}
#    set cp_status = $status
#    if( ${cp_status} != 0 ) then
#	echo "Copy failed: ${dev_bin_dir}/${dir}/${file} to ${deployment_bin_dir}/${dir}/${file}"
#	exit 7
#    endif
#    @ file_count ++
#end
#echo "${file_count} serialized Java message files copied."
#
# gif files
#
echo "Copying gif/wav files..."
set file_list = "autoguider/java/gui/lt_icon.gif"
set file_count = 0
cd ${dev_dir}
foreach file ( ${file_list} )
    cp ${dev_bin_dir}/${file} ${deployment_bin_dir}/${file}
    set cp_status = $status
    if( ${cp_status} != 0 ) then
	echo "Copy failed: ${dev_bin_dir}/${file} to ${deployment_bin_dir}/${file}"
	exit 6
    endif
    @ file_count ++
end
echo "${file_count} gif/wav files copied."
#
# Tidy deployment temp
#
cd ${deployment_dir}
rm -rf ${deployment_tmp_dir}
#
# Create deployment tar
#
echo "--------------------------"
echo "Creating deployment tar..."
cd ${deployment_dir}
tar cvf ${deployment_tar_dir}/${deployment_tar} .
echo "GZipping deployment tar..."
cd ${deployment_tar_dir}
rm -f ${deployment_tar}.gz
gzip ${deployment_tar}
echo "Deployment tar : ${deployment_tar_dir}/${deployment_tar}.gz"
echo "Installation script : ${current_dir}/${install_script}"
rm -rf ${deployment_dir}
echo "Download from http://ltdevsrv.livjm.ac.uk/~dev/autoguider/deployment/index.html."
echo "Download ${deployment_tar}.gz autoguider_tar_install icc_cshrc icc_cshrc_edit.awk README.DEPLOYMENT"
echo "Deployment ready."
#
# $Log: not supported by cvs2svn $
# Revision 1.21  2013/11/27 14:53:26  cjm
# autoguider.properties is now a per-machine name config, to allow iucaa support.
# Added back in libccd_dprt.so from deployment, we seem to need it again.
#
# Revision 1.20  2012/03/05 11:33:09  cjm
# Removed libccd_dprt.so from deployment, we don't seem to need it at the moment,
# and it does not build.
#
# Revision 1.19  2011/09/08 09:20:19  cjm
# Lots os changes.
#
# Revision 1.18  2010/07/20 12:22:59  cjm
# Added autoguider_temperature_to_csv / autoguider_log_get_temperature.
#
# Revision 1.17  2010/02/15 15:51:43  cjm
# libccd_dprt.so liblt_filenames.so now required by libdprt_libfits.so.
#
# Revision 1.16  2009/04/29 11:27:35  cjm
# Added back in libdprt_libfits.so.
#
# Revision 1.15  2009/03/16 11:43:05  cjm
# Added log_udp/test directory.
#
# Revision 1.14  2009/02/02 12:44:29  cjm
# Added log_udp test programs.
#
# Revision 1.13  2009/02/02 12:01:35  cjm
# Added liblog_udp.so.
#
# Revision 1.12  2007/11/23 21:28:57  cjm
# Fixed iboot - added directory.
#
# Revision 1.11  2007/11/23 21:18:48  cjm
# Added iboot dir.
#
# Revision 1.10  2007/11/06 12:13:54  cjm
# Added autoguider_rm_field_frames_cron.
#
# Revision 1.9  2007/10/15 17:58:05  cjm
# Removed libdprt_libfits.so .
#
# Revision 1.8  2007/08/29 16:20:34  cjm
# New directories.
# New jars.
# New libraries: libdprt_libfits.so for iterstat (autoguider_object.c).
# New scripts.
# New properties.
# New gif/wav files.
#
# Revision 1.7  2007/02/14 19:53:31  cjm
# Added more scripts to deployment.
#
# Revision 1.6  2007/01/29 12:52:41  cjm
# No longer deploys andor kernel module.
# No longer deploys andor installed files detector.ini,pcii29k_sldma.cof,pciifpga.rbf.
#
# Revision 1.5  2006/10/18 10:30:51  cjm
# Added autoguider_get_guide_frames_cron / autoguider_rm_guide_frames_cron.
#
# Revision 1.4  2006/09/20 10:41:03  cjm
# Added autoguider_get_object_list.
#
# Revision 1.3  2006/09/12 11:22:01  cjm
# Added autoguider_get_guide_packets.
#
# Revision 1.2  2006/07/20 15:39:17  cjm
# Added autobooter deployment.
#
# Revision 1.1  2006/06/07 11:10:57  cjm
# Initial revision
#
#
