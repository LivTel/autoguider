#!/bin/csh
# $Header: /home/cjm/cvs/autoguider/scripts/autoguider_field,v 1.2 2013-12-09 10:25:49 cjm Exp $
set ds9disp = 0
set exposure_length = 100
set frame_type_string = "reduced"
if ( $#argv > 0 ) then
    set next_arg = ""
    foreach arg ( $argv )
	if( "$arg" == "-ds9disp" ) then
		set ds9disp = 1
	else if( "$arg" == "-exposure_length" ) then
		set next_arg = "exposure_length"
	else if( "$arg" == "-help" ) then
		echo "autoguider_field [-exposure_length <ms>][-help][-ds9disp]"
		exit 1
	else 
		if( "${next_arg}" == "exposure_length" ) then
		    set exposure_length = "${arg}"
		    set next_arg = ""
		else
			echo "Unknown argument: $arg"
			exit 1
		endif
        endif
    end
endif
if ( -r /home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command ) then
    alias getfits_command "/home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command"
else if ( -r /icc/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command ) then
    alias getfits_command "/icc/bin/autoguider/commandserver/test/${HOSTTYPE}/test_getfits_command"
else
    echo "Could not find test_getfits_command."
    exit 2
endif
if ( -r /home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command ) then
    alias send_command "/home/dev/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command"
else if ( -r /icc/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command ) then
    alias send_command "/icc/bin/autoguider/commandserver/test/${HOSTTYPE}/send_command"
else
    echo "Could not find test_getfits_command."
    exit 2
endif
if ( -r /home/dev/bin/autoguider/scripts/print_line.awk ) then
    alias print_line "/home/dev/bin/autoguider/scripts/print_line.awk"
else if ( -r /icc/bin/autoguider/scripts/print_line.awk ) then
    alias print_line "/icc/bin/autoguider/scripts/print_line.awk"
else
    echo "Could not find print_line.awk."
    exit 3
endif
set hostname = "acc"
set port = "6571"
#
# do field
#
set field_output = `send_command -h ${hostname} -p ${port} -c "field ${exposure_length}"`
echo "field ${exposure_length} returned : ${field_output}"
set field_output = `echo "${field_output}" | sed "s/.*client: reply:\(.*\)/\1/"`
echo "field output now ${field_output}."
set retval = `echo "${field_output}" | /usr/bin/awk ' { print $1}'`
echo "retval is ${retval}."
if( "${retval}" != "0" ) then
	echo "field failed (${retval})."
	exit 1
endif
#
# get output fits
#
set file_number = 0
set date_string = `/bin/date +"%Y-%m-%dT%H:%M:%S"`
set filename = "field_${frame_type_string}_${date_string}_${file_number}.fits"
getfits_command -h ${hostname} -p ${port} -c "getfits field ${frame_type_string}" -f ${filename}
if( "${ds9disp}" == "1" ) then
	set ds9active = `xpaaccess ds9`
	if( "${ds9active}" == "yes" ) then
	    xpaset -p ds9 file ${filename}
	else
	    ds9 ${filename}&
	endif
endif
#
# get object count
#
set object_count_output = `send_command -h ${hostname} -p ${port} -c "status object count"`
echo "status object count returned : ${object_count_output}"
set object_count_output = `echo "${object_count_output}" | sed "s/.*client: reply:\(.*\)/\1/"`
echo "object count output now ${object_count_output}."
set retval = `echo "${object_count_output}" | /usr/bin/awk ' { print $1}'`
if( "${retval}" != "0" ) then
	echo "object count failed (${retval})."
	exit 1
endif
set object_count = `echo "${object_count_output}" | /usr/bin/awk ' { print $2}'`
if( "${object_count}" < "1" ) then
	echo "object count returned less than 1 object."
	exit 1
endif
#
# get object list
#
set object_filename = "field_${frame_type_string}_${date_string}_${file_number}.txt"
set object_list_output = `send_command -h ${hostname} -p ${port} -c "status object list" -f ${object_filename}`
#echo "status object list returned : ${object_list_output}"
#set object_list_output = `echo "${object_list_output}" | sed "s/.*client: reply:\(.*\)/\1/"`
#echo "object list output now ${object_list_output}."
#set retval = `echo "${object_list_output}" | /usr/bin/awk ' { print $1}'`
#if( "${retval}" != 0 ) then
#	echo "object list failed (${retval})."
#	exit 1
#endif
#echo "${object_list_output}" > ${object_filename}
#
# strip offheader lines
#
set line_count = `wc -l ${object_filename} | awk ' { print $1 }'`
echo "object output has ${line_count} lines."
@ line_count --
@ line_count --
set object_filename2 = "field_${frame_type_string}_${date_string}_${file_number}_headerless.txt"
tail -n ${line_count} ${object_filename} > ${object_filename2}
echo "Image annotations:"
set line_number = 1
while ( "${line_number}" <= "${line_count}" )
	set line = `print_line -v LINE=${line_number} ${object_filename2}`
	echo "Processing line: ${line}"
	# 1. guide ID
	# 2. Frame Number
        # 3. CCD X
        # 4. CCD Y
        # 5. Buffer X
        # 6. Buffer Y
	set x = `echo ${line} | /usr/bin/awk ' { print $5}' | sed "s/\(.*\)\..*/\1/"`
	set y = `echo ${line} | /usr/bin/awk ' { print $6}' | sed "s/\(.*\)\..*/\1/"`
	echo "circle $x $y 10"
	if( "${ds9disp}" == "1" ) then
	    set ds9active = `xpaaccess ds9`
	    while( "${ds9active}" == "no" )
		echo "ds9 is not yet active."
		sleep 1
		set ds9active = `xpaaccess ds9`
	    end
	    echo "circle $x $y 10" | xpaset ds9 regions
	endif
	@ line_number ++
end
#
# $Log: not supported by cvs2svn $
# Revision 1.1  2006/05/25 16:29:08  cjm
# Initial revision
#
#
